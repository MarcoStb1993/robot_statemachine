<!-- Simulation of Georg UGV Frontier Exploration -->

<launch>
	<arg name="frontier_exploration" default="false" />
	<arg name="explore_lite" default="false" />
	<arg name="autonomy_cmd_vel_topic" default="/autonomy/vel/cmd" />
	<arg name="goal_plugin" default="statemachine::CalculateGoalState" />
	<arg name="navigation_plugin"
		default="statemachine::RonaNavigationState" />
	<arg name="mapping_plugin"
		default="statemachine::MappingState" />
	<arg name="waypoint_routines" default="['Reversing']" />
	<arg name="rviz" default="false" />

	<node pkg="tf" type="static_transform_publisher"
		name="velodyne_32_to_laser_tf"
		args="0 0 0 0 0 0 1  /laser /velodyne_32  20" />

	<include file="$(find statemachine)/launch/statemachine.launch">
		<arg name="update_frequency" value="20" />
		<arg name="teleop_topic" value="/joy/vel/cmd" />
		<arg name="robot_frame" value="base_footprint" />
		<arg name="autonomy_cmd_vel_topic"
			value="$(arg autonomy_cmd_vel_topic)" />
		<arg name="calculate_goal_plugin"
			value="statemachine::CalculateGoalState" />
		<arg name="navigation_plugin" value="$(arg navigation_plugin)" />
		<arg name="mapping_plugin" value="$(arg mapping_plugin)" />
		<arg name="waypoint_routines" value="$(arg waypoint_routines)" />
	</include>

	<node pkg="statemachine_additions" type="bootUpNode"
		name="bootUpNode" output="screen" />

	<!-- RONA -->
	<!-- Path controller -->
	<node name="rona_move_node" pkg="rona_move" type="rona_move_node">
		<param name="pub_cmd_vel_topic" type="string"
			value="$(arg autonomy_cmd_vel_topic)" />
		<param name="pub_state_topic" type="string"
			value="rona/move/state" />
		<param name="pub_process_topic" type="string"
			value="rona/move/process" />
		<param name="sub_path_topic" type="string"
			value="rona/move/path" />
		<param name="sub_ctrl_topic" type="string"
			value="rona/move/ctrl" />
		<param name="map_frame" type="string" value="map" />
		<param name="robot_frame" type="string" value="base_footprint" />
		<param name="vel_lin_max" type="double" value="0.5" />
		<param name="vel_ang_max" type="double" value="0.5" />
		<param name="target_radius" type="double" value="0.2" />
		<param name="target_radius_final" type="double" value="0.2" />
		<param name="cos_pwr_n" type="int" value="4 " />
		<param name="cos_fac_n" type="double" value="3.5" />
		<param name="ang_reached_range" type="double" value="0.05" />
		<param name="lin_end_approach" type="double" value="1.0" />
		<param name="lin_ctrl_scale" type="double" value="2.0" />
		<param name="ang_ctrl_scale" type="double" value="8.0" />
		<param name="min_vel_value" type="double" value="0.001" />
		<param name="do_endrotate" type="bool" value="false" />
	</node>

	<!-- Path planner -->
	<node name="sirona_plan_node" pkg="sirona" type="sirona_plan_node"
		output="screen">
		<param name="sub_map_topic" type="string" value="map" />
		<param name="sub_target_topic" type="string"
			value="rona/plan/target" />
		<param name="sub_replan_topic" type="string"
			value="rona/plan/replan" />
		<param name="sub_add_obstacle_topic" type="string"
			value="rona/plan/add_obstacle" />
		<param name="sub_rm_obstacle_topic" type="string"
			value="rona/plan/rm_obstacle" />
		<param name="pub_path_topic" type="string"
			value="rona/plan/path" />
		<param name="pub_grid_topic" type="string"
			value="rona/map/inflated" />
		<param name="pub_grid_ob_topic" type="string"
			value="rona/map/obstacles" />
		<param name="map_frame" type="string" value="map" />
		<param name="robot_frame" type="string" value="base_footprint" />
		<param name="robot_radius" type="double" value="0.6" />
		<param name="dt_radius" type="double" value="0.3" />
		<param name="free_robot_pos_factor" type="double" value="0.2" />
	</node>

	<!-- Sirona state statemachine -->
	<node name="sirona_sm_node" pkg="sirona" type="sirona_sm_node"
		output="screen">
		<param name="pub_re_target_topic" type="string"
			value="rona/plan/target" />
		<param name="pub_re_addob_topic" type="string"
			value="rona/plan/add_obstacle" />
		<param name="pub_re_rmob_topic" type="string"
			value="rona/plan/rm_obstacle" />
		<param name="pub_replan_topic" type="string"
			value="rona/plan/replan" />
		<param name="pub_path_topic" type="string"
			value="rona/move/path" />
		<param name="pub_state_topic" type="string"
			value="rona/sirona/state" />
		<param name="pub_move_ctrl_topic" type="string"
			value="rona/move/ctrl" />
		<param name="sub_target_topic" type="string"
			value="rona/exploration/target" />
		<!--param name="sub_target_topic" type="string" value="/move_base_simple/goal" 
			/ -->
		<param name="sub_addob_topic" type="string"
			value="rona/add_obstacle" />
		<param name="sub_rmob_topic" type="string"
			value="rona/rm_obstacle" />
		<param name="sub_path_topic" type="string"
			value="rona/plan/path" />
		<param name="sub_state_topic" type="string"
			value="rona/move/state" />
		<param name="robot_frame" type="string" value="base_footprint" />
		<param name="map_frame" type="string" value="map" />
		<param name="obstacle_block_time" type="double" value="2.0" />
		<param name="ob_react_poly_0_x" type="double" value="0.0" />
		<param name="ob_react_poly_0_y" type="double" value="0.3" />
		<param name="ob_react_poly_1_x" type="double" value="0.0" />
		<param name="ob_react_poly_1_y" type="double" value="-0.3" />
		<param name="ob_react_poly_2_x" type="double" value="1.2" />
		<param name="ob_react_poly_2_y" type="double" value="-0.5" />
		<param name="ob_react_poly_3_x" type="double" value="1.2" />
		<param name="ob_react_poly_3_y" type="double" value="0.5" />
	</node>

	<!-- Obstacle Handler -->
	<node name="rona_obstacle_handler_node" pkg="rona_obstacle"
		type="rona_obstacle_handler_node" output="screen">
		<param name="pub_marker_topic" type="string"
			value="obstacle_fix_marker" />
		<param name="pub_add_obstacle_topic" type="string"
			value="rona/add_obstacle" />
		<param name="pub_rm_obstacle_topic" type="string"
			value="rona/rm_obstacle" />
		<param name="sub_obstacle_topic" type="string" value="obstacle" />
		<param name="map_frame" type="string" value="map" />
		<param name="robot_radius" type="double" value="0.6" />
		<param name="duration_obstacle_valid" type="double"
			value="3600 " />
	</node>

	<node pkg="tf" type="static_transform_publisher"
		name="base_footprint_reverse"
		args="0 0 0 3.1415 0 0             base_footprint          base_footprint_reverse		10" />


	<!-- Explore Lite -->
	<group if="$(arg explore_lite)">
		<node pkg="explore_lite" type="explore" respawn="false"
			name="explore">
			<param name="robot_base_frame" value="base_footprint" />
			<param name="costmap_topic" value="map" />
			<param name="costmap_updates_topic" value="map_updates" />
			<param name="visualize" value="true" />
			<param name="planner_frequency" value="0.33" />
			<param name="progress_timeout" value="30.0" />
			<param name="potential_scale" value="3.0" />
			<param name="orientation_scale" value="0.0" />
			<param name="gain_scale" value="1.0" />
			<param name="transform_tolerance" value="0.3" />
			<param name="min_frontier_size" value="0.75" />
			<remap from="/move_base" to="/frontier_move_base" />
		</node>

		<node
			if="$(eval goal_plugin == 'statemachine::CalculateGoalState')"
			pkg="statemachine_additions" type="frontiersMarkerToPointcloudNode"
			name="frontiersMarkerToPointcloudNode" />

		<node
			if="$(eval goal_plugin == 'statemachine::CalculateGoalState')"
			pkg="statemachine_additions" type="goalInterceptNode"
			name="goalInterceptNode" output="screen" />
	</group>

	<!-- Frontier Exploration -->
	<group if="$(arg frontier_exploration)">

		<node if="$(arg frontier_exploration)" pkg="frontier_exploration"
			type="explore_client" name="explore_client" output="screen" />

		<node if="$(arg frontier_exploration)" pkg="frontier_exploration"
			type="explore_server" name="explore_server" output="screen">
			<param name="frequency" value="1.0" />
			<!-- Should be less than sensor range -->
			<param name="goal_aliasing" value="2.0" />
			<remap from="/move_base" to="/frontier_move_base" />
			<rosparam
				file="$(find statemachine_additions)/config/gazebo_sim/costmap_common.yaml"
				command="load" ns="explore_costmap" />
			<rosparam
				file="$(find statemachine_additions)/config/gazebo_sim/costmap_exploration.yaml"
				command="load" ns="explore_costmap" />
		</node>

		<node pkg="statemachine_additions" type="unboundExplorationNode"
			name="unboundExplorationNode" output="screen">
			<param name="unbound" value="true" />
			<param name="delay" value="10" />
			<param name="xoffset" value="7.5" />
			<param name="yoffset" value="7.5" />
			<param name="xdim" value="15.0" />
			<param name="ydim" value="15.0" />
			<param name="goalx" value="5.0" />
			<param name="goaly" value="5.0" />
		</node>

		<node
			if="$(eval goal_plugin == 'statemachine::CalculateGoalState')"
			pkg="statemachine_additions" type="goalInterceptNode"
			name="goalInterceptNode" output="screen" />
	</group>

	<!-- RViz fÃ¼r Exploration -->
	<node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz"
		args="-d $(find statemachine_additions)/config/georg/georg.rviz" />
	<include if="$(arg rviz)"
		file="$(find statemachine_rviz_plugins)/launch/statemachine_rviz_plugins.launch">
		<arg name="update_frequency" value="20" />
	</include>
</launch>
