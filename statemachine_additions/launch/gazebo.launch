<!-- Gazebo launch files for world and robot -->

<launch>
	<arg name="world_file"
		default="$(find husky_gazebo)/launch/playpen.launch" />

	<!-- Include world launch -->
	<include file="$(arg world_file)" />

	<arg name="robot_namespace" default="/" />

	<!-- Robot starting position in world -->
	<arg name="x" default="0.0" />
	<arg name="y" default="0.0" />
	<arg name="z" default="1.0" />
	<arg name="yaw" default="0.0" />

	<arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)" />	<!-- set to path with additions to Husky URDF -->

	<arg name="config_extras"
		default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))" />


	<group ns="$(arg robot_namespace)">

		<!-- Load robot description -->
		<param name="robot_description"
			command="$(find xacro)/xacro '$(find statemachine_additions)/config/gazebo_sim/urdf/husky.urdf.xacro'
		    --inorder
		    robot_namespace:=$(arg robot_namespace)
		    urdf_extras:=$(arg urdf_extras)
		    " />

		<!-- Load controller configuration -->
		<rosparam command="load"
			file="$(find husky_control)/config/control.yaml" />

		<!-- Spawn controllers -->
		<node name="base_controller_spawner" pkg="controller_manager"
			type="spawner" args="husky_joint_publisher husky_velocity_controller" />

		<!-- Start EKF for localization -->
		<node pkg="robot_localization" type="ekf_localization_node"
			name="ekf_localization">
			<rosparam command="load"
				file="$(find statemachine_additions)/config/gazebo_sim/localization.yaml" />
		</node>

		<node pkg="interactive_marker_twist_server" type="marker_server"
			name="twist_marker_server" output="screen" />

		<node name="robot_state_publisher" pkg="robot_state_publisher"
			type="robot_state_publisher" />

		<node pkg="twist_mux" type="twist_mux" name="twist_mux">
			<rosparam command="load"
				file="$(find husky_control)/config/twist_mux.yaml" />
			<remap from="cmd_vel_out"
				to="husky_velocity_controller/cmd_vel" />
		</node>

		<!-- Override the default control parameters, see config/empty.yaml for 
			default. -->
		<rosparam command="load" file="$(arg config_extras)" />



		<!-- Spawn robot in gazebo -->
		<node name="spawn_husky_model" pkg="gazebo_ros"
			type="spawn_model"
			args="-x $(arg x)
		      -y $(arg y)
		      -z $(arg z)
		      -Y $(arg yaw)
		      -unpause
		      -urdf
		      -param robot_description
		      -model $(arg robot_namespace)" />

	</group>
</launch>
